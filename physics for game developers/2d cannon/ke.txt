#include <SDL2/SDL.h>
#include <SDL2/SDL_opengl.h>
#include <iostream>
// Largura e altura da janela
const int windowWidth = 800;
const int windowHeight = 600;
// Inicializa o SDL e o OpenGL
bool init();
// Encerra o SDL e o OpenGL
void close();
// Loop principal
int main(int argc, char* args[]) {
    if (!init()) {
        std::cout << "Falha ao inicializar" << std::endl;
        return 1;
    }
    // Flag para verificar se o loop principal deve continuar
    bool running = true;
    // Loop principal
    while (running) {
        // Trata os eventos da janela
        SDL_Event e;
        while (SDL_PollEvent(&e) != 0) {
            // Se o usuário clicou no botão de fechar da janela
            if (e.type == SDL_QUIT) {
                running = false;
            }
        }
        // Limpa a tela
        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
        // Renderiza algo aqui
        // Atualiza a tela
        SDL_GL_SwapWindow(window);
    }
    // Encerra o SDL e o OpenGL
    close();
    return 0;
}
bool init()
{
    if (SDL_Init(SDL_INIT_EVERYTHING) != 0)
    {
        cout << "Error initializing SDL: " << SDL_GetError() << endl;
        return false;
    }

    SDL_GL_SetAttribute(SDL_GL_DOUBLEBUFFER, 1);
    SDL_GL_SetAttribute(SDL_GL_DEPTH_SIZE, 24);

    window = SDL_CreateWindow("OpenGL with SDL", SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED, WIDTH, HEIGHT, SDL_WINDOW_OPENGL | SDL_WINDOW_RESIZABLE);
    if (!window)
    {
        cout << "Error creating window: " << SDL_GetError() << endl;
        return false;
    }

    context = SDL_GL_CreateContext(window);
    if (!context)
    {
        cout << "Error creating OpenGL context: " << SDL_GetError() << endl;
        return false;
    }

    glewExperimental = GL_TRUE;
    GLenum glewError = glewInit();
    if (glewError != GLEW_OK)
    {
        cout << "Error initializing GLEW: " << glewGetErrorString(glewError) << endl;
        return false;
    }

    return true;
}
void close()
{
    SDL_GL_DeleteContext(context);
    SDL_DestroyWindow(window);
    SDL_Quit();
}

