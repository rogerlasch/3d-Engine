#include <iostream>
#include "vector3d.h" // Supondo que você tenha uma classe Vector3D para lidar com vetores 3D.

class PlanoInclinado {
private:
    Vector3D startPoint;
    Vector3D normal;
    float inclinacao; // Em graus

public:
    PlanoInclinado(const Vector3D& start, const Vector3D& normal, float inclinacao)
        : startPoint(start), normal(normal), inclinacao(inclinacao) {
    }

    // Verifica se um ponto está acima ou abaixo do plano inclinado
    bool EstaAcima(const Vector3D& point) const {
        Vector3D direction = point - startPoint;
        float dotProduct = Vector3D::dotProduct(direction, normal);
        return dotProduct > 0.0f;
    }

    // Calcula a posição do ponto na superfície do plano inclinado
    Vector3D CalcularPosicaoSuperficie(const Vector3D& point) const {
        Vector3D direction = point - startPoint;
        float distancia = Vector3D::dotProduct(direction, normal);
        Vector3D posicaoSuperficie = point - normal * distancia;
        return posicaoSuperficie;
    }
};
v
